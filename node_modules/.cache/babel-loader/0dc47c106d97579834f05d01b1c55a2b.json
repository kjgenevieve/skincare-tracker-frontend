{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/components/IngredientsTable.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nexport default class IngredientsTable extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.formatData = ingredients => {\n      let ingredientData = ingredients.map(ingredient => {\n        return {\n          \"ingredient\": React.createElement(Link, {\n            to: \"/ingredients/\".concat(ingredient.ingredient.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 12\n            },\n            __self: this\n          }, ingredient.ingredient.name),\n          \"como_rating\": ingredient.ingredient.como_rating\n        };\n      });\n      return ingredientData;\n    };\n\n    this.filterCaseInsensitive = (filter, row) => {\n      const id = filter.pivotId || filter.id;\n      const content = row[id];\n\n      if (typeof content !== 'undefined') {\n        // console.log(content)\n        // filter by text in the table or if it's a object, filter by key\n        if (typeof content === 'object' && content !== null && content.props.children) {\n          return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n        } else {\n          return String(content).toLowerCase().includes(filter.value.toLowerCase());\n        }\n      }\n\n      return true;\n    };\n\n    this.sortMethod = (a, b, desc) => {\n      // force undefined to the bottom\n      a = a === undefined ? '' : a;\n      b = b === undefined ? '' : b;\n\n      if (a !== null || b !== null) {\n        // force null to the bottom\n        a = a === null ? '' : a;\n        b = b === null ? '' : b; // force any string values to lowercase\n\n        a = typeof a === 'string' ? a.toLowerCase() : a;\n        b = typeof b === 'string' ? b.toLowerCase() : b; // change objects to strings\n\n        a = typeof a === 'object' ? a = a.props.children : a;\n        b = typeof b === 'object' ? b = b.props.children : b; // change numbers to strings\n\n        a = typeof a === 'number' ? a.toString() : a;\n        b = typeof b === 'number' ? b.toString() : b; // Return either 1 or -1 to indicate a sort priority\n\n        if (a > b) {\n          return 1;\n        }\n\n        if (a < b) {\n          return -1;\n        } // returning 0, undefined or any falsey value will use subsequent sorts or\n        // the index as a tiebreaker\n\n\n        return 0;\n      }\n    };\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Ingredient',\n      accessor: 'ingredient'\n    }, {\n      Header: 'Comodogenic Rating',\n      accessor: 'como_rating'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(PageTitle, {\n      location: \"ingredients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(ReactTable, {\n      data: this.formatData(this.props.ingredients),\n      columns: columns,\n      defaultPageSize: 50,\n      style: {\n        height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n\n      },\n      className: \"-striped -highlight\",\n      filterable: true,\n      defaultFilterMethod: this.filterCaseInsensitive,\n      defaultSortMethod: this.sortMethod,\n      defaultSorted: [{\n        id: \"ingredient\",\n        asc: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/components/IngredientsTable.js"],"names":["React","Component","Link","PageTitle","ReactTable","IngredientsTable","formatData","ingredients","ingredientData","map","ingredient","id","name","como_rating","filterCaseInsensitive","filter","row","pivotId","content","props","children","String","toLowerCase","includes","value","sortMethod","a","b","desc","undefined","toString","render","columns","Header","accessor","height","asc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default class IngredientsTable extends Component {\n  \n  formatData = (ingredients) => {\n    let ingredientData = ingredients.map ((ingredient) => {\n      return {\n          \"ingredient\": <Link to={`/ingredients/${ingredient.ingredient.id}`}>{ingredient.ingredient.name}</Link>,\n          \"como_rating\": ingredient.ingredient.como_rating,\n        }\n    })\n    return ingredientData\n  }\n\n  filterCaseInsensitive = (filter, row) => {\n    const id = filter.pivotId || filter.id;\n    const content = row[id];\n    if (typeof content !== 'undefined') {\n      // console.log(content)\n      // filter by text in the table or if it's a object, filter by key\n        if (typeof content === 'object' && content !== null && content.props.children) {\n          return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());          \n        } else {\n            return String(content).toLowerCase().includes(filter.value.toLowerCase());\n        }\n    }\n\n    return true;\n  };\n\n  sortMethod = (a, b, desc) => {\n    // force undefined to the bottom\n    a = a === undefined ? '' : a\n    b = b === undefined ? '' : b\n    \n    if (a !== null || b !== null) {\n      // force null to the bottom\n      a = a === null ? '' : a\n      b = b === null ? '' : b\n\n      // force any string values to lowercase\n      a = typeof a === 'string' ? a.toLowerCase() : a\n      b = typeof b === 'string' ? b.toLowerCase() : b\n      \n      // change objects to strings\n      a = typeof a === 'object' ? a = a.props.children : a\n      b = typeof b === 'object' ? b = b.props.children : b\n\n      // change numbers to strings\n      a = typeof a === 'number' ? a.toString() : a\n      b = typeof b === 'number' ? b.toString() : b\n      \n      // Return either 1 or -1 to indicate a sort priority\n      if (a > b) {\n        return 1\n      }\n      if (a < b) {\n        return -1\n      }\n      // returning 0, undefined or any falsey value will use subsequent sorts or\n      // the index as a tiebreaker\n      return 0\n    }\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Ingredient',\n      accessor: 'ingredient'\n    }, {\n      Header: 'Comodogenic Rating',\n      accessor: 'como_rating',\n    }\n  ]\n  \n    return (\n      <div>\n        <PageTitle location=\"ingredients\" />\n        <ReactTable\n          data={this.formatData(this.props.ingredients)}\n          columns={columns}\n          defaultPageSize={50}\n          style={{\n            height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n          }}\n          className=\"-striped -highlight\"\n          filterable={true}\n          defaultFilterMethod={this.filterCaseInsensitive}\n          defaultSortMethod={this.sortMethod}\n          defaultSorted={[\n            {\n              id: \"ingredient\",\n              asc: true\n            }\n          ]}\n        />\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}