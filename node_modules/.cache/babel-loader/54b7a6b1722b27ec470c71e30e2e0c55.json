{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/containers/Main.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from '../components/Home';\nimport ProductTable from \"../components/ProductTable\";\nimport ProductProfile from \"../components/ProductProfile\";\nimport AddToShelf from \"../components/AddToShelf\";\nimport AddEditProduct from \"../components/AddEditProduct\";\nimport IngredientsTable from \"../components/IngredientsTable\";\nimport IngredientProfile from \"./IngredientProfile\";\nexport default class Main extends Component {\n  constructor() {\n    super();\n\n    this.renderProductTable = () => {\n      if (this.state.usersProductReviews.length === 0) {\n        const user_id = 1;\n        let url = \"http://localhost:3000/user_products/users/\".concat(user_id);\n        fetch(url).then(res => res.json()).then(data => {\n          this.setState({\n            usersProductReviews: data\n          });\n        }).then(() => {\n          return React.createElement(ProductTable, {\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        });\n      } else {\n        return React.createElement(ProductTable, {\n          usersProductReviews: this.state.usersProductReviews,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderAddToShelf = () => {\n      if (this.state.usersProductReviews.length === 0) {\n        const user_id = 1;\n        const urls = [\"http://localhost:3000/products\", \"http://localhost:3000/user_products/users/\".concat(user_id)];\n        Promise.all(urls.map(url => fetch(url).then(res => res.json()).catch(error => console.log(\"There was a problem!\", error))).then(data => {\n          this.setState({\n            allProducts: data[0],\n            usersProductReviews: data[1]\n          });\n        }).then(() => {\n          return React.createElement(AddToShelf, {\n            products: this.state.allProducts,\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          });\n        }));\n      } else {\n        let url = \"http://localhost:3000/products\";\n        fetch(url).then(res => res.json()).then(data => {\n          this.setState({\n            allProducts: data\n          });\n        }).then(() => {\n          return React.createElement(AddToShelf, {\n            products: this.state.allProducts,\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          });\n        });\n      }\n    };\n\n    this.state = {\n      allProducts: [],\n      usersProductReviews: [],\n      usersIngredients: [],\n      currentIngredient: {}\n    };\n  } // componentDidMount() {\n  //   const user_id = 13;\n  //   const urls = [\n  //     `http://localhost:3000/users/${user_id}`,\n  //     \"http://localhost:3000/user_products\",\n  //     \"http://localhost:3000/product_ingredients\",\n  //     \"http://localhost:3000/products\"\n  //   ];\n  //   Promise.all(\n  //     urls.map(url =>\n  //       fetch(url)\n  //         .then(resp => resp.json())\n  //         .catch(error => console.log(\"There was a problem!\", error))\n  //     )\n  //   ).then(data => this.getProductIds(data));\n  // }\n  // getProductIds = data => {\n  //   let userProductObjects = data[1];\n  //   let allIngredients = data[2];\n  //   let allProducts = data[3];\n  //   let productIds = data[0].user_products.map(product => product.product_id);\n  //   this.getUserProducts(productIds, userProductObjects, allIngredients, allProducts);\n  // };\n  // getUserProducts = (ids, objects, allIngredients, allProducts) => {\n  //   let userProducts = [];\n  //   ids.map(userProductId => {\n  //     return (userProducts = [\n  //       ...userProducts,\n  //       objects.find(userProduct => userProduct.product.id === userProductId)\n  //     ]);\n  //   });\n  //   this.getUserIngredients(ids, userProducts, allIngredients, allProducts);\n  // };\n  // getUserIngredients = (ids, userProducts, allIngredients, allProducts) => {\n  //   let rawIngredients = [];\n  //   ids.map(userProductId => {\n  //     return (rawIngredients = [\n  //       ...rawIngredients,\n  //       allIngredients.filter(\n  //         ingredient => ingredient.product.id === userProductId\n  //       )\n  //     ]);\n  //   });\n  //   rawIngredients = rawIngredients.flat();\n  //   let userIngredients = [];\n  //   let userIngIds = [];\n  //   rawIngredients.map(rawIngredient => {\n  //     if (userIngIds.includes(rawIngredient.ingredient.id)) {\n  //     } else {\n  //       userIngIds = [...userIngIds, rawIngredient.ingredient.id];\n  //       userIngredients = [...userIngredients, rawIngredient];\n  //     }\n  //     return userIngredients;\n  //   });\n  //   this.setNewState(userProducts, userIngredients, allProducts);\n  // };\n  // setNewState = (userProducts, ingredients, allProducts) => {\n  //   this.setState({\n  //     usersProducts: userProducts,\n  //     usersIngredients: ingredients,\n  //     allProducts: allProducts\n  //   });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products\",\n      render: this.renderProductTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products/:id\",\n      render: props => React.createElement(ProductProfile, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/addtoshelf\",\n      render: this.renderAddToShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/containers/Main.js"],"names":["React","Component","Route","Home","ProductTable","ProductProfile","AddToShelf","AddEditProduct","IngredientsTable","IngredientProfile","Main","constructor","renderProductTable","state","usersProductReviews","length","user_id","url","fetch","then","res","json","data","setState","renderAddToShelf","urls","Promise","all","map","catch","error","console","log","allProducts","usersIngredients","currentIngredient","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from '../components/Home';\nimport ProductTable from \"../components/ProductTable\";\nimport ProductProfile from \"../components/ProductProfile\";\nimport AddToShelf from \"../components/AddToShelf\";\nimport AddEditProduct from \"../components/AddEditProduct\";\nimport IngredientsTable from \"../components/IngredientsTable\";\nimport IngredientProfile from \"./IngredientProfile\";\n\nexport default class Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allProducts: [],\n      usersProductReviews: [],\n      usersIngredients: [],\n      currentIngredient: {}\n    };\n  }\n\n  // componentDidMount() {\n  //   const user_id = 13;\n  //   const urls = [\n  //     `http://localhost:3000/users/${user_id}`,\n  //     \"http://localhost:3000/user_products\",\n  //     \"http://localhost:3000/product_ingredients\",\n  //     \"http://localhost:3000/products\"\n  //   ];\n\n  //   Promise.all(\n  //     urls.map(url =>\n  //       fetch(url)\n  //         .then(resp => resp.json())\n  //         .catch(error => console.log(\"There was a problem!\", error))\n  //     )\n  //   ).then(data => this.getProductIds(data));\n  // }\n\n  // getProductIds = data => {\n  //   let userProductObjects = data[1];\n  //   let allIngredients = data[2];\n  //   let allProducts = data[3];\n  //   let productIds = data[0].user_products.map(product => product.product_id);\n\n  //   this.getUserProducts(productIds, userProductObjects, allIngredients, allProducts);\n  // };\n\n  // getUserProducts = (ids, objects, allIngredients, allProducts) => {\n  //   let userProducts = [];\n  //   ids.map(userProductId => {\n  //     return (userProducts = [\n  //       ...userProducts,\n  //       objects.find(userProduct => userProduct.product.id === userProductId)\n  //     ]);\n  //   });\n  //   this.getUserIngredients(ids, userProducts, allIngredients, allProducts);\n  // };\n\n  // getUserIngredients = (ids, userProducts, allIngredients, allProducts) => {\n  //   let rawIngredients = [];\n  //   ids.map(userProductId => {\n  //     return (rawIngredients = [\n  //       ...rawIngredients,\n  //       allIngredients.filter(\n  //         ingredient => ingredient.product.id === userProductId\n  //       )\n  //     ]);\n  //   });\n\n  //   rawIngredients = rawIngredients.flat();\n  //   let userIngredients = [];\n  //   let userIngIds = [];\n\n  //   rawIngredients.map(rawIngredient => {\n  //     if (userIngIds.includes(rawIngredient.ingredient.id)) {\n  //     } else {\n  //       userIngIds = [...userIngIds, rawIngredient.ingredient.id];\n  //       userIngredients = [...userIngredients, rawIngredient];\n  //     }\n  //     return userIngredients;\n  //   });\n\n  //   this.setNewState(userProducts, userIngredients, allProducts);\n  // };\n\n  // setNewState = (userProducts, ingredients, allProducts) => {\n  //   this.setState({\n  //     usersProducts: userProducts,\n  //     usersIngredients: ingredients,\n  //     allProducts: allProducts\n  //   });\n  // };\n\n  renderProductTable = () => {\n    if (this.state.usersProductReviews.length === 0) {\n      const user_id = 1\n      let url = `http://localhost:3000/user_products/users/${user_id}`\n      \n      fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          usersProductReviews: data\n        })\n      })\n      .then(() =>\n        {return (\n          <ProductTable usersProductReviews={this.state.usersProductReviews} />\n        )})\n    } else {\n      return (\n        <ProductTable usersProductReviews={this.state.usersProductReviews} />\n      )\n    }\n  }\n\n  renderAddToShelf = () => {\n    if (this.state.usersProductReviews.length === 0) {\n      const user_id = 1\n      const urls = [\n      `http://localhost:3000/products`,\n      `http://localhost:3000/user_products/users/${user_id}`\n      ]\n      \n      Promise.all(\n        urls.map(url =>\n          fetch(url)\n          .then(res => res.json())\n          .catch(error => console.log(\"There was a problem!\", error))\n        ).then(data => {\n          this.setState({\n            allProducts: data[0],\n            usersProductReviews: data[1]\n          })\n        })\n        .then(() =>\n        {return(\n          <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n        )})\n      )\n    } else {\n      let url = `http://localhost:3000/products`\n      fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          allProducts: data\n        })\n      })\n      .then(() =>\n        {return (\n          <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n        )})\n    }\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Home />\n          )}\n        />\n        <Route\n          exact\n          path=\"/products\"\n          render={this.renderProductTable}\n        />\n        <Route\n          exact\n          path=\"/products/:id\"\n          render={(props) => (\n            <ProductProfile {...props} />\n          )}\n        />\n        \n        <Route\n          exact\n          path=\"/addtoshelf\"\n          render={this.renderAddToShelf}\n        />\n        \n  {/* \n        <Route\n          exact\n          path=\"/addtoshelf/:product_id\"\n          render={props => (\n            <AddEditProduct {...props} products={this.state.allProducts} usersProducts={this.state.usersProducts}/>\n          )}\n        />\n        <Route\n          exact\n          path=\"/ingredients\"\n          render={props => (\n            <IngredientsTable\n              {...props}\n              ingredients={this.state.usersIngredients}\n            />\n          )}\n        />\n        <Route\n          path=\"/ingredients/:id\"\n          render={() => (\n            <IngredientProfile\n              // {...props}\n            //   onSetCurrentIngredient={this.setCurrentIngredient}\n            //   ingredient={this.state.currentIngredient}\n            />\n          )}\n        /> */}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}