{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/components/AddToShelf.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nexport default class AddToShelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productData: []\n    };\n\n    this.handleChange = (e, d) => {\n      this.setState({\n        [d.name]: d.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(\"http://localhost:3000/productsearch?search=\".concat(this.state.userInput)).then(res => res.json()).then(data => {\n        this.formatData(data, this.props.usersProductReviews);\n      });\n    };\n\n    this.formatData = (products, usersProductReviews) => {\n      let productData = [];\n      let usersProductIds = [];\n\n      if (products && usersProductReviews) {\n        usersProductReviews.product_reviews.map(review => {\n          return usersProductIds.push(review.product.id);\n        }); // eslint-disable-next-line\n\n        products.map(product => {\n          if (usersProductIds.includes(product.id)) {// This line can be removed if there's a reasonable \".excludes()\" method.\n          } else {\n            return productData = [...productData, {\n              \"id\": product.id,\n              \"brand\": product.brand,\n              \"name\": React.createElement(Link, {\n                to: \"/products/\".concat(product.id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 42\n                },\n                __self: this\n              }, product.name),\n              \"category\": product.category,\n              \"img_url\": React.createElement(\"img\", {\n                src: product.img_url,\n                height: \"100\",\n                alt: product.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44\n                },\n                __self: this\n              }),\n              \"sunscreen_type\": product.sunscreen_type,\n              \"spf\": product.spf,\n              \"pa\": product.pa,\n              \"add\": React.createElement(Button, {\n                as: Link,\n                to: \"/addtoshelf/\".concat(product.id),\n                className: \"ui button\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 48\n                },\n                __self: this\n              }, \"Add to Shelf\")\n            }];\n          }\n        });\n      } else {\n        console.log(\"Data not being received (ProductTable.js)\");\n      } // return productData\n\n\n      this.setState({\n        productData: productData\n      }, () => console.log(this.state.productData.length));\n    };\n\n    this.filterCaseInsensitive = (filter, row) => {\n      const id = filter.pivotId || filter.id;\n      const content = row[id];\n\n      if (typeof content !== 'undefined') {\n        // filter by text in the table or if it's a object, filter by key\n        if (typeof content === 'object' && content !== null && content.props.children) {\n          // console.log(content)\n          return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n        } else {\n          // console.log(\"content\", content)\n          return String(content).toLowerCase().includes(filter.value.toLowerCase());\n        }\n      }\n    };\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Image',\n      accessor: 'img_url',\n      width: 115\n    }, {\n      Header: 'Brand',\n      accessor: 'brand',\n      width: 100\n    }, {\n      Header: 'Name',\n      accessor: 'name',\n      style: {\n        'whiteSpace': 'unset'\n      },\n      width: 175\n    }, {\n      Header: 'Category',\n      accessor: 'category',\n      width: 100,\n      filterMethod: (filter, row) => {\n        if (filter.value === \"all\") {\n          return true;\n        }\n\n        if (filter.value === \"cleanser\") {\n          return row[filter.id] === \"Cleanser\";\n        }\n\n        if (filter.value === \"eye care\") {\n          return row[filter.id] === \"Eye Care\";\n        }\n\n        if (filter.value === \"lip care\") {\n          return row[filter.id] === \"Lip Care\";\n        }\n\n        if (filter.value === \"mask\") {\n          return row[filter.id] === \"Mask\";\n        }\n\n        if (filter.value === \"moisturizer\") {\n          return row[filter.id] === \"Moisturizer\";\n        }\n\n        if (filter.value === \"mist\") {\n          return row[filter.id] === \"Mist\";\n        }\n\n        if (filter.value === \"sunscreen\") {\n          return row[filter.id] === \"Sunscreen\";\n        }\n\n        if (filter.value === \"toner\") {\n          return row[filter.id] === \"Toner\";\n        }\n\n        if (filter.value === \"treatment\") {\n          return row[filter.id] === \"Treatment\";\n        }\n\n        return row[filter.id] === \"Misc\";\n      },\n      Filter: ({\n        filter,\n        onChange\n      }) => React.createElement(\"select\", {\n        onChange: event => onChange(event.target.value),\n        style: {\n          width: \"100%\"\n        },\n        value: filter ? filter.value : \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"option\", {\n        value: \"cleanser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Cleansers\"), React.createElement(\"option\", {\n        value: \"eye care\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Eye Care\"), React.createElement(\"option\", {\n        value: \"lip care\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Lip Care\"), React.createElement(\"option\", {\n        value: \"mask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Masks\"), React.createElement(\"option\", {\n        value: \"moisturizer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Moisturizers\"), React.createElement(\"option\", {\n        value: \"mist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Mists\"), React.createElement(\"option\", {\n        value: \"sunscreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Sunscreens\"), React.createElement(\"option\", {\n        value: \"toner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Toners\"), React.createElement(\"option\", {\n        value: \"treatment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Treatments\"), React.createElement(\"option\", {\n        value: \"misc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Other\"))\n    }, {\n      Header: 'Sunscreen',\n      columns: [{\n        Header: 'SPF',\n        accessor: 'spf',\n        width: 45\n      }, {\n        Header: 'PA',\n        accessor: 'pa',\n        style: {\n          'whiteSpace': 'unset'\n        },\n        width: 45\n      }]\n    }, {\n      Header: 'Add Product',\n      accessor: 'add'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(PageTitle, {\n      location: \"addtoshelf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      control: Input,\n      label: \"Search by Brand or Product\",\n      name: \"userInput\",\n      placeholder: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Search\")), React.createElement(ReactTable, {\n      data: this.state.productData,\n      columns: columns,\n      defaultPageSize: 50,\n      noDataText: \"Search for a product to see results.\",\n      style: {\n        height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n\n      },\n      className: \"-striped -highlight\",\n      filterable: true,\n      defaultFilterMethod: this.filterCaseInsensitive,\n      defaultSorted: [{\n        id: \"current\",\n        desc: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Tip: Hold shift when sorting to sort by multiple columns!\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/components/AddToShelf.js"],"names":["React","Component","Link","Button","Form","Input","PageTitle","ReactTable","AddToShelf","state","productData","handleChange","e","d","setState","name","value","handleSubmit","fetch","userInput","then","res","json","data","formatData","props","usersProductReviews","products","usersProductIds","product_reviews","map","review","push","product","id","includes","brand","category","img_url","sunscreen_type","spf","pa","console","log","length","filterCaseInsensitive","filter","row","pivotId","content","children","String","toLowerCase","render","columns","Header","accessor","width","style","filterMethod","Filter","onChange","event","target","height","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default class AddToShelf extends Component {\n  state = {\n    productData: []\n  }\n\n  handleChange = (e, d) => {\n    this.setState({ [d.name]: d.value })\n  }\n\n  handleSubmit = () => {\n    fetch(`http://localhost:3000/productsearch?search=${this.state.userInput}`)\n      .then(res => res.json())\n      .then(data => {\n        this.formatData(data, this.props.usersProductReviews)\n      })        \n  }\n  \n  formatData = (products, usersProductReviews) => {\n      let productData = []\n      let usersProductIds = []\n      if (products && usersProductReviews) {\n        usersProductReviews.product_reviews.map ((review) => {\n          return usersProductIds.push(review.product.id)          \n        })\n\n        // eslint-disable-next-line\n        products.map ((product) => {\n            if (usersProductIds.includes(product.id)) {\n              // This line can be removed if there's a reasonable \".excludes()\" method.\n            } else {\n                return productData = [...productData,\n                    {\n                        \"id\": product.id,\n                        \"brand\": product.brand,\n                        \"name\": <Link to={`/products/${product.id}`}>{product.name}</Link>,\n                        \"category\": product.category,\n                        \"img_url\": <img src={product.img_url} height=\"100\" alt={product.id}/>,\n                        \"sunscreen_type\": product.sunscreen_type,\n                        \"spf\": product.spf,\n                        \"pa\": product.pa,\n                        \"add\": <Button\n                            as={ Link } to={`/addtoshelf/${product.id}`}\n                            className=\"ui button\"\n                            >\n                                Add to Shelf\n                            </Button>\n                    }\n                ]\n            }\n        })\n      } else {\n          console.log(\"Data not being received (ProductTable.js)\")\n      }\n      // return productData\n      this.setState({\n        productData: productData\n      }, () => console.log(this.state.productData.length))\n    }\n    \n      filterCaseInsensitive = (filter, row) => {\n        const id = filter.pivotId || filter.id;\n        const content = row[id];\n        if (typeof content !== 'undefined') {  \n          // filter by text in the table or if it's a object, filter by key\n            if (typeof content === 'object' && content !== null && content.props.children) {\n              // console.log(content)\n              return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n            } else {\n              // console.log(\"content\", content)\n              return String(content).toLowerCase().includes(filter.value.toLowerCase());\n            }\n        }\n      }\n\n  render() {\n    const columns = [{\n        Header: 'Image',\n        accessor: 'img_url',\n        width: 115\n      }, {\n        Header: 'Brand',\n        accessor: 'brand',\n        width: 100\n      }, {\n        Header: 'Name',\n        accessor: 'name',\n        style: { 'whiteSpace': 'unset' },\n        width: 175\n      }, {\n        Header: 'Category',\n        accessor: 'category',\n        width: 100,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"all\") {\n            return true;\n          }\n          if (filter.value === \"cleanser\") {\n            return row[filter.id] === \"Cleanser\";\n          }\n          if (filter.value === \"eye care\") {\n            return row[filter.id] === \"Eye Care\";\n          }\n          if (filter.value === \"lip care\") {\n            return row[filter.id] === \"Lip Care\";\n          }\n          if (filter.value === \"mask\") {\n            return row[filter.id] === \"Mask\";\n          }\n          if (filter.value === \"moisturizer\") {\n            return row[filter.id] === \"Moisturizer\";\n          }\n          if (filter.value === \"mist\") {\n            return row[filter.id] === \"Mist\";\n          }\n          if (filter.value === \"sunscreen\") {\n            return row[filter.id] === \"Sunscreen\";\n          }\n          if (filter.value === \"toner\") {\n            return row[filter.id] === \"Toner\";\n          }\n          if (filter.value === \"treatment\") {\n            return row[filter.id] === \"Treatment\";\n          }\n          return row[filter.id] === \"Misc\";\n        },\n        Filter: ({ filter, onChange }) =>\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"cleanser\">Cleansers</option>\n            <option value=\"eye care\">Eye Care</option>\n            <option value=\"lip care\">Lip Care</option>\n            <option value=\"mask\">Masks</option>\n            <option value=\"moisturizer\">Moisturizers</option>\n            <option value=\"mist\">Mists</option>\n            <option value=\"sunscreen\">Sunscreens</option>\n            <option value=\"toner\">Toners</option>\n            <option value=\"treatment\">Treatments</option>\n            <option value=\"misc\">Other</option>\n          </select>\n      }, {\n        Header: 'Sunscreen',\n        columns: [{\n            Header: 'SPF',\n            accessor: 'spf',\n            width: 45,\n        }, {\n            Header: 'PA',\n            accessor: 'pa',\n            style: { 'whiteSpace': 'unset' },\n            width: 45,\n        }]\n      }, {\n        Header: 'Add Product',\n        accessor: 'add',\n      }\n    ]\n  \n    return (\n      <div>\n            <PageTitle location=\"addtoshelf\" />\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field\n                control={Input}\n                label=\"Search by Brand or Product\"\n                name=\"userInput\"\n                placeholder=\"\"\n                onChange={this.handleChange}\n              />\n              <Form.Button>Search</Form.Button>\n            </Form>\n            \n            <ReactTable\n                data={this.state.productData}\n                columns={columns}\n                defaultPageSize={50}\n                noDataText=\"Search for a product to see results.\"\n                style={{\n                    height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n                }}\n                className=\"-striped -highlight\"\n                filterable={true}\n                defaultFilterMethod={this.filterCaseInsensitive}\n                defaultSorted={[\n                    {\n                    id: \"current\",\n                    desc: true\n                    }\n                ]}\n            />\n            <center><p><i>Tip: Hold shift when sorting to sort by multiple columns!</i></p></center>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}