{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/containers/Main.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from '../components/Home';\nimport ProductTable from \"../components/ProductTable\";\nimport ProductProfile from \"../components/ProductProfile\";\nimport AddToShelf from \"../components/AddToShelf\";\nimport AddEditProduct from \"../components/AddEditProduct\";\nimport IngredientsTable from \"../components/IngredientsTable\";\nimport IngredientProfile from \"./IngredientProfile\";\nexport default class Main extends Component {\n  constructor() {\n    super();\n\n    this.renderProductTable = () => {\n      if (this.state.usersProductReviews.length === 0) {\n        const user_id = 1;\n        let url = \"http://localhost:3000/user_products/users/\".concat(user_id);\n        fetch(url).then(res => res.json()).then(data => {\n          this.setState({\n            usersProductReviews: data\n          });\n        }).then(() => {\n          return React.createElement(ProductTable, {\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        });\n      } else {\n        return React.createElement(ProductTable, {\n          usersProductReviews: this.state.usersProductReviews,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderAddToShelf = () => {\n      if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length === 0) {\n        // I don't have state set.\n        // Get allProducts && usersProductReviews, set to state, render <AddToShelf /> with props.\n        const user_id = 1;\n        const urls = [\"http://localhost:3000/products\", \"http://localhost:3000/user_products/users/\".concat(user_id)];\n        Promise.all(urls.map(url => fetch(url).then(resp => resp.json()).catch(error => console.log(\"There was a problem!\", error)))).then(data => {\n          this.setState({\n            allProducts: data[0],\n            usersProductReviews: data[1]\n          });\n        }).then(() => {\n          return React.createElement(AddToShelf, {\n            products: this.state.allProducts,\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          });\n        });\n      } else if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length !== 0) {\n        // I already have state.allProducts. (This is an edge case that should not occur.) It's possible that this part of the program is broken, because I have no way to test it.\n        // Get usersProductReviews, set to state, render <AddToShelf /> with props.\n        console.log(\"Error: Main.js, renderAddToShelf(), 'else if' statement.\");\n        const user_id = 1;\n        fetch(\"http://localhost:3000/user_products/users/\".concat(user_id)).then(res => res.json()).then(data => {\n          this.setState({\n            usersProductReviews: data\n          });\n        }).then(() => {\n          return React.createElement(AddToShelf, {\n            products: this.state.allProducts,\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          });\n        });\n      } else if (this.state.usersProductReviews.length !== 0 && this.state.allProducts.length === 0) {\n        // I already have state.usersProductReviews.\n        // Get allProducts, set to state, render <AddToShelf /> with props.\n        fetch(\"http://localhost:3000/products\").then(res => res.json()).then(data => {\n          this.setState({\n            allProducts: data\n          });\n        }).then(() => {\n          return React.createElement(AddToShelf, {\n            products: this.state.allProducts,\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          });\n        });\n      } else {\n        // I have access to both state.usersProductReviews && state.allProducts.\n        // Render <AddToShelf /> with props.\n        return React.createElement(AddToShelf, {\n          products: this.state.allProducts,\n          usersProductReviews: this.state.usersProductReviews,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderIngredients = () => {\n      let rawIngredients = [];\n      let usersIngredientsIds = [];\n      let usersIngredients = [];\n\n      if (this.state.usersIngredients.length === 0) {\n        console.log(\"Gotta fetch!\");\n        const user_id = 1;\n        fetch(\"http://localhost:3000/users/\".concat(user_id)).then(res => res.json()).then(data => {\n          rawIngredients = data.user_ingredients.flat();\n        }).then(() => {\n          rawIngredients.map(ingredient => {\n            if (usersIngredientsIds.includes(ingredient.id)) {\n              console.log(\"if statement\");\n            } else {\n              usersIngredientsIds.push(ingredient.id);\n              usersIngredients.push(ingredient);\n            }\n          });\n        }).then(() => {\n          this.setState({\n            usersIngredients: usersIngredients\n          });\n        }, () => console.log(\"STATE!\", this.state)); //     let rawIngredients = [];\n        //     ids.map(userProductId => {\n        //       return (rawIngredients = [\n        //         ...rawIngredients,\n        //         allIngredients.filter(\n        //           ingredient => ingredient.product.id === userProductId\n        //         )\n        //       ]);\n        //     rawIngredients = rawIngredients.flat();\n        //     let userIngredients = [];\n        //     let userIngIds = [];\n        //     rawIngredients.map(rawIngredient => {\n        //       if (userIngIds.includes(rawIngredient.ingredient.id)) {\n        //       } else {\n        //         userIngIds = [...userIngIds, rawIngredient.ingredient.id];\n        //         userIngredients = [...userIngredients, rawIngredient];\n        //       }\n        //       return userIngredients;\n        //     });\n        //   dupIngredients.map (ingredient => {\n        //     dupIngredientsIds.push(ingredient.id)\n        //   })\n        //   (ingredient => {\n        //     if (usersIngredients.includes(ingredient)) {\n        //       // could remove if javascript had \"excludes\"\n        //     } else {\n        //       usersIngredients.push(ingredient)\n        //     }\n        //   })\n        //   usersIngredients = [...new Set(dupIngredients)]\n        //   console.log(\"Dup\", dupIngredients)\n        //   console.log(\"usersIngredients\", usersIngredients)\n        // })\n        // .then(data => {\n        //   this.setState({\n        //     usersProductReviews: data\n        //   })\n        // })\n        // .then(() =>\n        //   {return (\n        //     <IngredientsTable ingredients={this.state.usersIngredients} />\n        //   )})\n      } else {\n        console.log(\"We've got ingredients!\"); // return (\n        //     <IngredientsTable ingredients={this.state.usersIngredients} />\n        // )\n      }\n    };\n\n    this.state = {\n      allProducts: [],\n      usersProductReviews: [],\n      usersIngredients: [],\n      currentIngredient: {}\n    };\n  } // componentDidMount() {\n  //   const user_id = 13;\n  //   const urls = [\n  //     `http://localhost:3000/users/${user_id}`,\n  //     \"http://localhost:3000/user_products\",\n  //     \"http://localhost:3000/product_ingredients\",\n  //     \"http://localhost:3000/products\"\n  //   ];\n  //   Promise.all(\n  //     urls.map(url =>\n  //       fetch(url)\n  //         .then(resp => resp.json())\n  //         .catch(error => console.log(\"There was a problem!\", error))\n  //     )\n  //   ).then(data => this.getProductIds(data));\n  // }\n  // getProductIds = data => {\n  //   let userProductObjects = data[1];\n  //   let allIngredients = data[2];\n  //   let allProducts = data[3];\n  //   let productIds = data[0].user_products.map(product => product.product_id);\n  //   this.getUserProducts(productIds, userProductObjects, allIngredients, allProducts);\n  // };\n  // getUserProducts = (ids, objects, allIngredients, allProducts) => {\n  //   let userProducts = [];\n  //   ids.map(userProductId => {\n  //     return (userProducts = [\n  //       ...userProducts,\n  //       objects.find(userProduct => userProduct.product.id === userProductId)\n  //     ]);\n  //   });\n  //   this.getUserIngredients(ids, userProducts, allIngredients, allProducts);\n  // };\n  // getUserIngredients = (ids, userProducts, allIngredients, allProducts) => {\n  //   let rawIngredients = [];\n  //   ids.map(userProductId => {\n  //     return (rawIngredients = [\n  //       ...rawIngredients,\n  //       allIngredients.filter(\n  //         ingredient => ingredient.product.id === userProductId\n  //       )\n  //     ]);\n  //   });\n  //   rawIngredients = rawIngredients.flat();\n  //   let userIngredients = [];\n  //   let userIngIds = [];\n  //   rawIngredients.map(rawIngredient => {\n  //     if (userIngIds.includes(rawIngredient.ingredient.id)) {\n  //     } else {\n  //       userIngIds = [...userIngIds, rawIngredient.ingredient.id];\n  //       userIngredients = [...userIngredients, rawIngredient];\n  //     }\n  //     return userIngredients;\n  //   });\n  //   this.setNewState(userProducts, userIngredients, allProducts);\n  // };\n  // setNewState = (userProducts, ingredients, allProducts) => {\n  //   this.setState({\n  //     usersProducts: userProducts,\n  //     usersIngredients: ingredients,\n  //     allProducts: allProducts\n  //   });\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products\",\n      render: this.renderProductTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products/:id\",\n      render: props => React.createElement(ProductProfile, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/addtoshelf\",\n      render: this.renderAddToShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/addtoshelf/:product_id\",\n      render: props => React.createElement(AddEditProduct, Object.assign({}, props, {\n        products: this.state.allProducts,\n        usersProducts: this.state.usersProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/ingredients\",\n      render: this.renderIngredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), \")} />\");\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/containers/Main.js"],"names":["React","Component","Route","Home","ProductTable","ProductProfile","AddToShelf","AddEditProduct","IngredientsTable","IngredientProfile","Main","constructor","renderProductTable","state","usersProductReviews","length","user_id","url","fetch","then","res","json","data","setState","renderAddToShelf","allProducts","urls","Promise","all","map","resp","catch","error","console","log","renderIngredients","rawIngredients","usersIngredientsIds","usersIngredients","user_ingredients","flat","ingredient","includes","id","push","currentIngredient","render","props","usersProducts"],"mappings":"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AAAA,mBAAmB,CAACO,IAApB,CAAyBH,UAAU,CAACE,EAApC;AACAL,cAAAA,gBAAgB,CAACM,IAAjB,CAAsBH,UAAtB;AACD;AACF,WAPD;AAQD,SAdD,EAeCtB,IAfD,CAeM,MAAM;AACV,eAAKI,QAAL,CAAc;AACZe,YAAAA,gBAAgB,EAAEA;AADN,WAAd;AAGD,SAnBD,EAmBG,MAAML,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKrB,KAA3B,CAnBT,EAH4C,CA6B5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAjFD,MAiFO;AACLoB,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EADK,CAEL;AACA;AACA;AACD;AACF,KAvQa;;AAEZ,SAAKrB,KAAL,GAAa;AACXY,MAAAA,WAAW,EAAE,EADF;AAEXX,MAAAA,mBAAmB,EAAE,EAFV;AAGXwB,MAAAA,gBAAgB,EAAE,EAHP;AAIXO,MAAAA,iBAAiB,EAAE;AAJR,KAAb;AAMD,GATyC,CAW1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAyLAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,MAAM,EAAE,MACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,MAAM,EAAE,KAAKlC,kBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAaE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,eAFP;AAGE,MAAA,MAAM,EAAGmC,KAAD,IACN,oBAAC,cAAD,oBAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAoBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,MAAM,EAAE,KAAKvB,gBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAyBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,yBAFP;AAGE,MAAA,MAAM,EAAEuB,KAAK,IACX,oBAAC,cAAD,oBAAoBA,KAApB;AAA2B,QAAA,QAAQ,EAAE,KAAKlC,KAAL,CAAWY,WAAhD;AAA6D,QAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWmC,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EAgCE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,MAAM,EAAE,KAAKb,iBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,UADF;AAqDD;;AAjUyC","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from '../components/Home';\nimport ProductTable from \"../components/ProductTable\";\nimport ProductProfile from \"../components/ProductProfile\";\nimport AddToShelf from \"../components/AddToShelf\";\nimport AddEditProduct from \"../components/AddEditProduct\";\nimport IngredientsTable from \"../components/IngredientsTable\";\nimport IngredientProfile from \"./IngredientProfile\";\n\nexport default class Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allProducts: [],\n      usersProductReviews: [],\n      usersIngredients: [],\n      currentIngredient: {}\n    };\n  }\n\n  // componentDidMount() {\n  //   const user_id = 13;\n  //   const urls = [\n  //     `http://localhost:3000/users/${user_id}`,\n  //     \"http://localhost:3000/user_products\",\n  //     \"http://localhost:3000/product_ingredients\",\n  //     \"http://localhost:3000/products\"\n  //   ];\n\n  //   Promise.all(\n  //     urls.map(url =>\n  //       fetch(url)\n  //         .then(resp => resp.json())\n  //         .catch(error => console.log(\"There was a problem!\", error))\n  //     )\n  //   ).then(data => this.getProductIds(data));\n  // }\n\n  // getProductIds = data => {\n  //   let userProductObjects = data[1];\n  //   let allIngredients = data[2];\n  //   let allProducts = data[3];\n  //   let productIds = data[0].user_products.map(product => product.product_id);\n\n  //   this.getUserProducts(productIds, userProductObjects, allIngredients, allProducts);\n  // };\n\n  // getUserProducts = (ids, objects, allIngredients, allProducts) => {\n  //   let userProducts = [];\n  //   ids.map(userProductId => {\n  //     return (userProducts = [\n  //       ...userProducts,\n  //       objects.find(userProduct => userProduct.product.id === userProductId)\n  //     ]);\n  //   });\n  //   this.getUserIngredients(ids, userProducts, allIngredients, allProducts);\n  // };\n\n  // getUserIngredients = (ids, userProducts, allIngredients, allProducts) => {\n  //   let rawIngredients = [];\n  //   ids.map(userProductId => {\n  //     return (rawIngredients = [\n  //       ...rawIngredients,\n  //       allIngredients.filter(\n  //         ingredient => ingredient.product.id === userProductId\n  //       )\n  //     ]);\n  //   });\n\n  //   rawIngredients = rawIngredients.flat();\n  //   let userIngredients = [];\n  //   let userIngIds = [];\n\n  //   rawIngredients.map(rawIngredient => {\n  //     if (userIngIds.includes(rawIngredient.ingredient.id)) {\n  //     } else {\n  //       userIngIds = [...userIngIds, rawIngredient.ingredient.id];\n  //       userIngredients = [...userIngredients, rawIngredient];\n  //     }\n  //     return userIngredients;\n  //   });\n\n  //   this.setNewState(userProducts, userIngredients, allProducts);\n  // };\n\n  // setNewState = (userProducts, ingredients, allProducts) => {\n  //   this.setState({\n  //     usersProducts: userProducts,\n  //     usersIngredients: ingredients,\n  //     allProducts: allProducts\n  //   });\n  // };\n\n  renderProductTable = () => {\n    if (this.state.usersProductReviews.length === 0) {\n      const user_id = 1\n      let url = `http://localhost:3000/user_products/users/${user_id}`\n      \n      fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          usersProductReviews: data\n        })\n      })\n      .then(() =>\n        {return (\n          <ProductTable usersProductReviews={this.state.usersProductReviews} />\n        )})\n    } else {\n      return (\n        <ProductTable usersProductReviews={this.state.usersProductReviews} />\n      )\n    }\n  }\n\n  renderAddToShelf = () => {\n    if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length === 0) {\n      // I don't have state set.\n      // Get allProducts && usersProductReviews, set to state, render <AddToShelf /> with props.\n      const user_id = 1;\n      const urls = [\n        \"http://localhost:3000/products\",\n        `http://localhost:3000/user_products/users/${user_id}`\n      ];\n\n      Promise.all(\n        urls.map(url =>\n          fetch(url)\n            .then(resp => resp.json())\n            .catch(error => console.log(\"There was a problem!\", error))\n        )\n      ).then(data => {\n        this.setState({\n          allProducts: data[0],\n          usersProductReviews: data[1]\n        })\n      }).then(() => {\n        return (\n          <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n        )\n      })\n    } else if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length !== 0) {\n      // I already have state.allProducts. (This is an edge case that should not occur.) It's possible that this part of the program is broken, because I have no way to test it.\n      // Get usersProductReviews, set to state, render <AddToShelf /> with props.\n      console.log(\"Error: Main.js, renderAddToShelf(), 'else if' statement.\")\n      const user_id = 1;\n\n      fetch(`http://localhost:3000/user_products/users/${user_id}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          usersProductReviews: data\n        })\n      })\n      .then(() =>\n        {return (\n          <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n        )})\n    } else if (this.state.usersProductReviews.length !== 0 && this.state.allProducts.length === 0) {\n      // I already have state.usersProductReviews.\n      // Get allProducts, set to state, render <AddToShelf /> with props.\n      fetch(`http://localhost:3000/products`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          allProducts: data\n        })\n      })\n      .then(() =>\n        {return (\n          <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n        )})\n    } else {\n      // I have access to both state.usersProductReviews && state.allProducts.\n      // Render <AddToShelf /> with props.\n      return (\n        <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n      )\n    }\n  }\n\n  renderIngredients = () => {\n    let rawIngredients = []\n    let usersIngredientsIds = []\n    let usersIngredients = []\n    if (this.state.usersIngredients.length === 0) {\n      console.log(\"Gotta fetch!\")\n      const user_id = 1\n      fetch(`http://localhost:3000/users/${user_id}`)\n      .then(res => res.json())\n      .then((data) => {\n        rawIngredients = data.user_ingredients.flat()\n      })\n      .then(() => {\n        rawIngredients.map ((ingredient) => {\n          if (usersIngredientsIds.includes(ingredient.id)) {\n            console.log(\"if statement\")\n          } else {\n            usersIngredientsIds.push(ingredient.id);\n            usersIngredients.push(ingredient)\n          }\n        })\n      })\n      .then(() => {\n        this.setState({\n          usersIngredients: usersIngredients\n        })\n      }, () => console.log(\"STATE!\", this.state))\n      \n        \n        \n        \n        \n        \n      //     let rawIngredients = [];\n      //     ids.map(userProductId => {\n      //       return (rawIngredients = [\n      //         ...rawIngredients,\n      //         allIngredients.filter(\n      //           ingredient => ingredient.product.id === userProductId\n      //         )\n      //       ]);\n      //     rawIngredients = rawIngredients.flat();\n      //     let userIngredients = [];\n      //     let userIngIds = [];\n\n      //     rawIngredients.map(rawIngredient => {\n      //       if (userIngIds.includes(rawIngredient.ingredient.id)) {\n      //       } else {\n      //         userIngIds = [...userIngIds, rawIngredient.ingredient.id];\n      //         userIngredients = [...userIngredients, rawIngredient];\n      //       }\n      //       return userIngredients;\n      //     });\n              \n        \n        \n        \n      //   dupIngredients.map (ingredient => {\n      //     dupIngredientsIds.push(ingredient.id)\n      //   })\n        \n        \n        \n        \n      //   (ingredient => {\n      //     if (usersIngredients.includes(ingredient)) {\n      //       // could remove if javascript had \"excludes\"\n      //     } else {\n      //       usersIngredients.push(ingredient)\n      //     }\n      //   })\n\n      //   usersIngredients = [...new Set(dupIngredients)]\n      //   console.log(\"Dup\", dupIngredients)\n      //   console.log(\"usersIngredients\", usersIngredients)\n      // })\n      // .then(data => {\n      //   this.setState({\n      //     usersProductReviews: data\n      //   })\n      // })\n      // .then(() =>\n      //   {return (\n      //     <IngredientsTable ingredients={this.state.usersIngredients} />\n      //   )})\n    } else {\n      console.log(\"We've got ingredients!\")\n      // return (\n      //     <IngredientsTable ingredients={this.state.usersIngredients} />\n      // )\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Home />\n          )}\n        />\n        <Route\n          exact\n          path=\"/products\"\n          render={this.renderProductTable}\n        />\n        <Route\n          exact\n          path=\"/products/:id\"\n          render={(props) => (\n            <ProductProfile {...props} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/addtoshelf\"\n          render={this.renderAddToShelf}\n        />\n        <Route\n          exact\n          path=\"/addtoshelf/:product_id\"\n          render={props => (\n            <AddEditProduct {...props} products={this.state.allProducts} usersProducts={this.state.usersProducts}/>\n          )}\n        />\n        <Route\n          exact\n          path=\"/ingredients\"\n          render={this.renderIngredients}\n            />\n          )}\n        />\n        {/* \n        <Route\n          path=\"/ingredients/:id\"\n          render={() => (\n            <IngredientProfile\n              // {...props}\n            //   onSetCurrentIngredient={this.setCurrentIngredient}\n            //   ingredient={this.state.currentIngredient}\n            />\n          )}\n        /> */}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}