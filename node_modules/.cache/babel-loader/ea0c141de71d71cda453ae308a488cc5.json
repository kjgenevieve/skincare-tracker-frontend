{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/components/ProductProfile.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { Button, Confirm } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ProductIngredients from './ProductIngredients';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport checkmark from \"../assets/checkmark.svg\";\nexport default class ProductProfile extends Component {\n  constructor() {\n    super();\n\n    this.getData = () => {\n      let userId = 1;\n      let productId = window.location.pathname.split(\"/\").pop();\n      const urls = [\"http://localhost:3000/products/\".concat(productId, \"/\"), \"http://localhost:3000/users/\".concat(userId, \"/user_products\")];\n      Promise.all(urls.map(url => fetch(url).then(resp => resp.json()))).then(data => this.destructureData(data));\n    };\n\n    this.destructureData = data => {\n      let product = data[0];\n      let ingredients = product.ingredients;\n      let allReviews = data[1];\n      this.findProductReview(product, ingredients, allReviews);\n    };\n\n    this.findProductReview = (product, ingredients, allReviews) => {\n      let productReview = {};\n      allReviews.map(review => {\n        if (review.product.id === product.id) {\n          productReview = review;\n        }\n      });\n      this.setNewState(product, ingredients, productReview);\n    };\n\n    this.setNewState = (product, ingredients, productReview) => {\n      this.setState({\n        product: product,\n        productReview: productReview,\n        ingredients: ingredients\n      });\n    };\n\n    this.open = () => this.setState({\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.handleConfirmDelete = () => {\n      let product_review_id = this.state.productReview.id;\n      fetch(\"http://localhost:3000/user_products/\".concat(product_review_id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content_Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response => response.json();\n        } else {\n          throw new Error(\"Network response was not ok.\");\n        }\n      }).then(this.setState(() => ({\n        toProductsPage: true\n      }))).catch(error => console.log(error.message));\n    };\n\n    this.state = {\n      product: {},\n      productReview: {},\n      ingredients: [],\n      open: false,\n      toProductsPage: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    if (this.state.toProductsPage === true) {\n      return React.createElement(Redirect, {\n        to: \"/products\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(PageTitle, {\n      location: \"product profile\",\n      productBrand: this.state.product.brand,\n      productName: this.state.product.name,\n      productImage: this.state.product.img_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: Link,\n      to: \"/addtoshelf/\".concat(this.state.product.id),\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Add to Shelf\"), React.createElement(Button, {\n      onClick: this.open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Delete from Shelf\"), React.createElement(Confirm, {\n      open: this.state.open,\n      onCancel: this.close,\n      onConfirm: this.handleConfirmDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Brand: \"), \" \", this.state.product.brand), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Product: \"), \" \", this.state.product.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Category: \"), \" \", this.state.product.category), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"SPF: \"), \" \", this.state.product.spf), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"PA: \"), \" \", this.state.product.pa)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Rating: \"), \" \", this.state.productReview.rating), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Current: \"), \" \", this.state.productReview.current), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Wishlist: \"), \" \", this.state.productReview.wishlist), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Caused Acne: \"), \" \", this.state.productReview.caused_acne), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Notes: \"), \" \", this.state.productReview.notes)));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker/frontend/src/components/ProductProfile.js"],"names":["React","Component","Link","Redirect","withRouter","Button","Confirm","PageTitle","ProductIngredients","ReactTable","ProductProfile","constructor","getData","userId","productId","window","location","pathname","split","pop","urls","Promise","all","map","url","fetch","then","resp","json","data","destructureData","product","ingredients","allReviews","findProductReview","productReview","review","id","setNewState","setState","open","close","handleConfirmDelete","product_review_id","state","method","headers","Accept","response","ok","Error","toProductsPage","catch","error","console","log","message","componentDidMount","render","brand","name","img_url","category","spf","pa","rating","current","wishlist","caused_acne","notes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { Button, Confirm } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ProductIngredients from './ProductIngredients';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport checkmark from '../assets/checkmark.svg'\n\nexport default class ProductProfile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            product: {},\n            productReview: {},\n            ingredients: [],\n            open: false,\n            toProductsPage: false\n        }\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData = () => {\n        let userId = 1\n        let productId = window.location.pathname.split(\"/\").pop()\n        const urls = [\n            `http://localhost:3000/products/${productId}/`,\n            `http://localhost:3000/users/${userId}/user_products`\n        ]\n        \n        Promise.all(\n            urls.map(url =>\n                fetch(url)\n                .then(resp => resp.json())\n            )\n        )\n        .then(data => this.destructureData(data))\n    }\n\n    destructureData = (data) => {\n        let product = data[0]\n        let ingredients = product.ingredients\n        let allReviews = data[1]\n        this.findProductReview(product, ingredients, allReviews)\n    }\n\n    findProductReview = (product, ingredients, allReviews) => {\n        let productReview = {}\n        allReviews.map ((review) => {\n            if (review.product.id === product.id) {\n                productReview = review\n            }\n        })\n        \n        this.setNewState(product, ingredients, productReview)\n    }\n\n    setNewState = (product, ingredients, productReview) => {\n        this.setState({\n            product: product,\n            productReview: productReview,\n            ingredients: ingredients\n        })\n    }\n\n    // Delete button functions\n    open = () => this.setState({ open: true })\n    close = () => this.setState({ open: false })\n    \n    handleConfirmDelete = () => {\n        let product_review_id = this.state.productReview.id\n        fetch(`http://localhost:3000/user_products/${product_review_id}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content_Type\": \"application/json\",\n                Accept: \"application/json\"\n            }\n        })\n        .then(response => {\n            if (response.ok) {\n                return response => response.json();\n            } else {\n                throw new Error(\"Network response was not ok.\");\n            }\n          })\n        .then(\n            this.setState(() => ({\n                toProductsPage: true\n            }))\n        )\n        .catch(error => console.log(error.message));\n    }\n    \n    render() {\n        if (this.state.toProductsPage === true) {\n            return <Redirect to='/products' />\n        }\n        return (\n            <div>\n                <PageTitle location=\"product profile\" productBrand={this.state.product.brand} productName={this.state.product.name} productImage={this.state.product.img_url}/>\n                <Button \n                    as={ Link } to={`/addtoshelf/${this.state.product.id}`}\n                    className=\"ui button\"\n                >\n                    Add to Shelf\n                </Button>\n                <Button onClick={this.open}>\n                    Delete from Shelf\n                </Button>\n                <Confirm\n                    open={this.state.open}\n                    onCancel={this.close}\n                    onConfirm={this.handleConfirmDelete}\n                />\n                <div>\n                    <div>\n                        <b>Brand: </b> {this.state.product.brand}\n                    </div>\n                    <div>\n                        <b>Product: </b> {this.state.product.name}\n                    </div>\n                    <div>\n                        <b>Category: </b> {this.state.product.category}\n                    </div>\n                    <div>\n                        <b>SPF: </b> {this.state.product.spf}\n                    </div>\n                    <div>\n                        <b>PA: </b> {this.state.product.pa}\n                    </div>\n                </div>\n                <div>\n                    <div>\n                        <b>Rating: </b> {this.state.productReview.rating}\n                    </div>\n                    <div>\n                        <b>Current: </b> {this.state.productReview.current}\n                    </div>\n                    <div>\n                        <b>Wishlist: </b> {this.state.productReview.wishlist}\n                    </div>\n                    <div>\n                        <b>Caused Acne: </b> {this.state.productReview.caused_acne}\n                    </div>\n                    <div>\n                        <b>Notes: </b> {this.state.productReview.notes}\n                    </div>\n                </div>\n                {/* <ProductIngredients ingredients={this.state.ingredients}/> */}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}