{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/components/AddToShelf.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Checkbox, Dropdown, Form, Input } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nexport default class AddToShelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productData: []\n    };\n\n    this.handleChange = (e, d) => {\n      this.setState({\n        [d.name]: d.value\n      });\n    };\n\n    this.handleCategoryDropdown = (e, {\n      value\n    }) => this.setState({\n      value\n    });\n\n    this.handleClearFilters = () => {\n      this.setState({\n        productData: productData\n      }, () => console.log(this.state));\n    };\n\n    this.handleSubmit = () => {\n      let categoryQuery = \"\";\n\n      if (this.state.value) {\n        categoryQuery = \"&category=\" + this.state.value.join(\"+\");\n      }\n\n      let url = \"http://localhost:3000/productsearch?search=\".concat(this.state.userInput).concat(categoryQuery);\n      fetch(url).then(res => res.json()).then(data => {\n        this.formatData(data, this.props.usersProductReviews);\n      });\n    };\n\n    this.formatData = (products, usersProductReviews) => {\n      let productData = [];\n      let usersProductIds = [];\n\n      if (products && usersProductReviews) {\n        usersProductReviews.product_reviews.map(review => {\n          return usersProductIds.push(review.product.id);\n        }); // eslint-disable-next-line\n\n        products.map(product => {\n          if (usersProductIds.includes(product.id)) {// This line can be removed if there's a reasonable \".excludes()\" method.\n          } else {\n            return productData = [...productData, {\n              \"id\": product.id,\n              \"brand\": product.brand,\n              \"name\": React.createElement(Link, {\n                to: \"/products/\".concat(product.id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 57\n                },\n                __self: this\n              }, product.name),\n              \"category\": product.category,\n              \"img_url\": React.createElement(\"img\", {\n                src: product.img_url,\n                height: \"100\",\n                alt: product.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 59\n                },\n                __self: this\n              }),\n              \"sunscreen_type\": product.sunscreen_type,\n              \"spf\": product.spf,\n              \"pa\": product.pa,\n              \"add\": React.createElement(Button, {\n                as: Link,\n                to: \"/addtoshelf/\".concat(product.id),\n                className: \"ui button\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 63\n                },\n                __self: this\n              }, \"Add to Shelf\")\n            }];\n          }\n        });\n      } else {\n        console.log(\"Data not being received (ProductTable.js)\");\n      }\n\n      this.setState({\n        productData: productData\n      });\n    };\n\n    this.filterCaseInsensitive = (filter, row) => {\n      const id = filter.pivotId || filter.id;\n      const content = row[id];\n\n      if (typeof content !== 'undefined') {\n        // filter by text in the table or if it's a object, filter by key\n        if (typeof content === 'object' && content !== null && content.props.children) {\n          return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n        } else {\n          return String(content).toLowerCase().includes(filter.value.toLowerCase());\n        }\n      }\n    };\n  }\n\n  render() {\n    const columns = [{\n      Header: 'Image',\n      accessor: 'img_url',\n      width: 115\n    }, {\n      Header: 'Brand',\n      accessor: 'brand',\n      width: 100\n    }, {\n      Header: 'Name',\n      accessor: 'name',\n      style: {\n        'whiteSpace': 'unset'\n      },\n      width: 175\n    }, {\n      Header: 'Category',\n      accessor: 'category',\n      width: 100,\n      filterMethod: (filter, row) => {\n        if (filter.value === \"all\") {\n          return true;\n        }\n\n        if (filter.value === \"cleanser\") {\n          return row[filter.id] === \"Cleanser\";\n        }\n\n        if (filter.value === \"eye care\") {\n          return row[filter.id] === \"Eye Care\";\n        }\n\n        if (filter.value === \"lip care\") {\n          return row[filter.id] === \"Lip Care\";\n        }\n\n        if (filter.value === \"mask\") {\n          return row[filter.id] === \"Mask\";\n        }\n\n        if (filter.value === \"moisturizer\") {\n          return row[filter.id] === \"Moisturizer\";\n        }\n\n        if (filter.value === \"mist\") {\n          return row[filter.id] === \"Mist\";\n        }\n\n        if (filter.value === \"sunscreen\") {\n          return row[filter.id] === \"Sunscreen\";\n        }\n\n        if (filter.value === \"toner\") {\n          return row[filter.id] === \"Toner\";\n        }\n\n        if (filter.value === \"treatment\") {\n          return row[filter.id] === \"Treatment\";\n        }\n\n        return row[filter.id] === \"Misc\";\n      },\n      Filter: ({\n        filter,\n        onChange\n      }) => React.createElement(\"select\", {\n        onChange: event => onChange(event.target.value),\n        style: {\n          width: \"100%\"\n        },\n        value: filter ? filter.value : \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"all\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"option\", {\n        value: \"cleanser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Cleansers\"), React.createElement(\"option\", {\n        value: \"eye care\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Eye Care\"), React.createElement(\"option\", {\n        value: \"lip care\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Lip Care\"), React.createElement(\"option\", {\n        value: \"mask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Masks\"), React.createElement(\"option\", {\n        value: \"moisturizer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Moisturizers\"), React.createElement(\"option\", {\n        value: \"mist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Mists\"), React.createElement(\"option\", {\n        value: \"sunscreen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Sunscreens\"), React.createElement(\"option\", {\n        value: \"toner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Toners\"), React.createElement(\"option\", {\n        value: \"treatment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Treatments\"), React.createElement(\"option\", {\n        value: \"misc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Other\"))\n    }, {\n      Header: 'Sunscreen',\n      columns: [{\n        Header: 'SPF',\n        accessor: 'spf',\n        width: 45\n      }, {\n        Header: 'PA',\n        accessor: 'pa',\n        style: {\n          'whiteSpace': 'unset'\n        },\n        width: 45\n      }]\n    }, {\n      Header: 'Add Product',\n      accessor: 'add'\n    }]; // const { value } = this.state\n\n    const categoryOptions = [{\n      key: 'Cleanser',\n      text: 'Cleanser',\n      value: 'Cleanser'\n    }, {\n      key: 'Eye',\n      text: 'Eye Care',\n      value: 'Eye'\n    }, {\n      key: 'Lip',\n      text: 'Lip Care',\n      value: 'Lip'\n    }, {\n      key: 'Mask',\n      text: 'Mask',\n      value: 'Mask'\n    }, {\n      key: 'Moisturizer',\n      text: 'Moisturizer',\n      value: 'Moisturizer'\n    }, {\n      key: 'Mist',\n      text: 'Mist',\n      value: 'Mist'\n    }, {\n      key: 'Sunscreen',\n      text: 'Sunscreen',\n      value: 'Sunscreen'\n    }, {\n      key: 'Toner',\n      text: 'Toner',\n      value: 'Toner'\n    }, {\n      key: 'Treatment',\n      text: 'Treatment',\n      value: 'Treatment'\n    }, {\n      key: 'Misc',\n      text: 'Other',\n      value: 'Misc'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(PageTitle, {\n      location: \"addtoshelf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      control: Input,\n      label: \"Search by Brand or Product\",\n      name: \"userInput\",\n      placeholder: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Filter by Category\"), React.createElement(Dropdown, {\n      placeholder: \"Category\",\n      name: \"categoryFilters\",\n      fluid: true,\n      search: true,\n      multiple: true,\n      selection: true,\n      options: categoryOptions,\n      onChange: this.handleCategoryDropdown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Form.Button, {\n      onClick: this.handleClearFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Clear Filters\")), React.createElement(ReactTable, {\n      data: this.state.productData,\n      columns: columns,\n      defaultPageSize: 25,\n      noDataText: \"Search for a product to see results.\",\n      style: {\n        height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n\n      },\n      className: \"-striped -highlight\",\n      filterable: true,\n      defaultFilterMethod: this.filterCaseInsensitive,\n      defaultSorted: [{\n        id: \"current\",\n        desc: true\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Tip: Hold shift when sorting to sort by multiple columns!\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/components/AddToShelf.js"],"names":["React","Component","Link","Button","Checkbox","Dropdown","Form","Input","PageTitle","ReactTable","AddToShelf","state","productData","handleChange","e","d","setState","name","value","handleCategoryDropdown","handleClearFilters","console","log","handleSubmit","categoryQuery","join","url","userInput","fetch","then","res","json","data","formatData","props","usersProductReviews","products","usersProductIds","product_reviews","map","review","push","product","id","includes","brand","category","img_url","sunscreen_type","spf","pa","filterCaseInsensitive","filter","row","pivotId","content","children","String","toLowerCase","render","columns","Header","accessor","width","style","filterMethod","Filter","onChange","event","target","categoryOptions","key","text","height","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Checkbox, Dropdown, Form, Input } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default class AddToShelf extends Component {\n  state = {\n    productData: []\n  }\n\n  handleChange = (e, d) => {\n    this.setState({ [d.name]: d.value })\n  }\n\n  handleCategoryDropdown = (e, { value }) => this.setState({ value })\n\n  handleClearFilters = () => {\n    this.setState({\n      productData: productData\n    }, () => console.log(this.state))\n  }\n\n  handleSubmit = () => {\n    let categoryQuery = \"\"\n    if (this.state.value) {\n      categoryQuery = \"&category=\" + this.state.value.join(\"+\")\n    }\n    \n    let url = `http://localhost:3000/productsearch?search=${this.state.userInput}${categoryQuery}`\n\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.formatData(data, this.props.usersProductReviews)\n      })        \n  }\n  \n  formatData = (products, usersProductReviews) => {\n    let productData = []\n    let usersProductIds = []\n    if (products && usersProductReviews) {\n      usersProductReviews.product_reviews.map ((review) => {\n        return usersProductIds.push(review.product.id)          \n      })\n\n      // eslint-disable-next-line\n      products.map ((product) => {\n        if (usersProductIds.includes(product.id)) {\n          // This line can be removed if there's a reasonable \".excludes()\" method.\n        } else {\n          return productData = [...productData,\n            {\n              \"id\": product.id,\n              \"brand\": product.brand,\n              \"name\": <Link to={`/products/${product.id}`}>{product.name}</Link>,\n              \"category\": product.category,\n              \"img_url\": <img src={product.img_url} height=\"100\" alt={product.id}/>,\n              \"sunscreen_type\": product.sunscreen_type,\n              \"spf\": product.spf,\n              \"pa\": product.pa,\n              \"add\": <Button\n                as={ Link } to={`/addtoshelf/${product.id}`}\n                className=\"ui button\"\n              >\n                Add to Shelf\n              </Button>\n            }\n          ]\n        }\n      })\n    } else {\n      console.log(\"Data not being received (ProductTable.js)\")\n    }\n    this.setState({\n      productData: productData\n    })\n  }\n      \n  filterCaseInsensitive = (filter, row) => {\n    const id = filter.pivotId || filter.id;\n    const content = row[id];\n    if (typeof content !== 'undefined') {  \n      // filter by text in the table or if it's a object, filter by key\n      if (typeof content === 'object' && content !== null && content.props.children) {\n        return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n      } else {\n        return String(content).toLowerCase().includes(filter.value.toLowerCase());\n      }\n    }\n  }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Image',\n        accessor: 'img_url',\n        width: 115\n      }, {\n        Header: 'Brand',\n        accessor: 'brand',\n        width: 100\n      }, {\n        Header: 'Name',\n        accessor: 'name',\n        style: { 'whiteSpace': 'unset' },\n        width: 175\n      }, {\n        Header: 'Category',\n        accessor: 'category',\n        width: 100,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"all\") {\n            return true;\n          }\n          if (filter.value === \"cleanser\") {\n            return row[filter.id] === \"Cleanser\";\n          }\n          if (filter.value === \"eye care\") {\n            return row[filter.id] === \"Eye Care\";\n          }\n          if (filter.value === \"lip care\") {\n            return row[filter.id] === \"Lip Care\";\n          }\n          if (filter.value === \"mask\") {\n            return row[filter.id] === \"Mask\";\n          }\n          if (filter.value === \"moisturizer\") {\n            return row[filter.id] === \"Moisturizer\";\n          }\n          if (filter.value === \"mist\") {\n            return row[filter.id] === \"Mist\";\n          }\n          if (filter.value === \"sunscreen\") {\n            return row[filter.id] === \"Sunscreen\";\n          }\n          if (filter.value === \"toner\") {\n            return row[filter.id] === \"Toner\";\n          }\n          if (filter.value === \"treatment\") {\n            return row[filter.id] === \"Treatment\";\n          }\n          return row[filter.id] === \"Misc\";\n        },\n        Filter: ({ filter, onChange }) =>\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"cleanser\">Cleansers</option>\n            <option value=\"eye care\">Eye Care</option>\n            <option value=\"lip care\">Lip Care</option>\n            <option value=\"mask\">Masks</option>\n            <option value=\"moisturizer\">Moisturizers</option>\n            <option value=\"mist\">Mists</option>\n            <option value=\"sunscreen\">Sunscreens</option>\n            <option value=\"toner\">Toners</option>\n            <option value=\"treatment\">Treatments</option>\n            <option value=\"misc\">Other</option>\n          </select>\n      }, {\n        Header: 'Sunscreen',\n        columns: [{\n          Header: 'SPF',\n          accessor: 'spf',\n          width: 45,\n        }, {\n          Header: 'PA',\n          accessor: 'pa',\n          style: { 'whiteSpace': 'unset' },\n          width: 45,\n        }]\n      }, {\n        Header: 'Add Product',\n        accessor: 'add',\n      }\n    ]\n  \n    // const { value } = this.state\n\n    const categoryOptions = [\n      { key: 'Cleanser', text: 'Cleanser', value: 'Cleanser' },\n      { key: 'Eye', text: 'Eye Care', value: 'Eye' },\n      { key: 'Lip', text: 'Lip Care', value: 'Lip' },\n      { key: 'Mask', text: 'Mask', value: 'Mask' },\n      { key: 'Moisturizer', text: 'Moisturizer', value: 'Moisturizer' },\n      { key: 'Mist', text: 'Mist', value: 'Mist' },\n      { key: 'Sunscreen', text: 'Sunscreen', value: 'Sunscreen' },\n      { key: 'Toner', text: 'Toner', value: 'Toner' },\n      { key: 'Treatment', text: 'Treatment', value: 'Treatment' },\n      { key: 'Misc', text: 'Other', value: 'Misc' },\n    ]\n\n    return (\n      <div>\n        <PageTitle location=\"addtoshelf\" />\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field\n            control={Input}\n            label=\"Search by Brand or Product\"\n            name=\"userInput\"\n            placeholder=\"\"\n            onChange={this.handleChange}\n          />\n          <Form.Group>\n            <label>Filter by Category</label>\n              <Dropdown\n                placeholder='Category'\n                name=\"categoryFilters\"\n                fluid\n                search\n                multiple\n                selection\n                options={categoryOptions}\n                onChange={this.handleCategoryDropdown}\n              />\n          </Form.Group>\n          <Form.Button>Submit</Form.Button>\n          <Form.Button\n            onClick={this.handleClearFilters}\n          >\n            Clear Filters\n          </Form.Button>\n        </Form>\n        \n        <ReactTable\n          data={this.state.productData}\n          columns={columns}\n          defaultPageSize={25}\n          noDataText=\"Search for a product to see results.\"\n          style={{\n            height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n          }}\n          className=\"-striped -highlight\"\n          filterable={true}\n          defaultFilterMethod={this.filterCaseInsensitive}\n          defaultSorted={[\n            {\n              id: \"current\",\n              desc: true\n            }\n          ]}\n        />\n        <center><p><i>Tip: Hold shift when sorting to sort by multiple columns!</i></p></center>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}