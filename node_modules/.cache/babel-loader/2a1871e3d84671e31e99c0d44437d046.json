{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/components/AddToShelf.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nexport default class AddToShelf extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shouldReRender: false\n    };\n\n    this.handleChange = (e, d) => {\n      this.setState({\n        [d.name]: d.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch(\"http://localhost:3000/productsearch?search=\".concat(this.state.userInput)).then(res => res.json()).then(data => {\n        this.formatData(data, this.props.usersProductReviews);\n      });\n    };\n\n    this.formatData = (products, usersProductReviews) => {\n      // console.log(\"products\", products)\n      // console.log(\"usersProductReviews\", usersProductReviews)\n      let productData = [];\n      let usersProductIds = [];\n\n      if (products && usersProductReviews) {\n        // Get IDs off of the User's reviewed products\n        usersProductReviews.product_reviews.map(review => {\n          return usersProductIds.push(review.product.id);\n        }); // eslint-disable-next-line\n\n        products.map(product => {\n          if (usersProductIds.includes(product.id)) {// This line can be removed if there's a reasonable \".excludes()\" method.\n          } else {\n            productData = [...productData, {\n              \"id\": product.id,\n              \"brand\": product.brand,\n              \"name\": React.createElement(Link, {\n                to: \"/products/\".concat(product.id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 44\n                },\n                __self: this\n              }, product.name),\n              \"category\": product.category,\n              \"img_url\": React.createElement(\"img\", {\n                src: product.img_url,\n                height: \"100\",\n                alt: product.id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 46\n                },\n                __self: this\n              }),\n              \"sunscreen_type\": product.sunscreen_type,\n              \"spf\": product.spf,\n              \"pa\": product.pa,\n              \"add\": React.createElement(Button, {\n                as: Link,\n                to: \"/addtoshelf/\".concat(product.id),\n                className: \"ui button\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 50\n                },\n                __self: this\n              }, \"Add to Shelf\")\n            }];\n          }\n        });\n      } else {\n        console.log(\"Data not being received (ProductTable.js)\");\n      }\n\n      const columns = [{\n        Header: 'Image',\n        accessor: 'img_url',\n        width: 115\n      }, {\n        Header: 'Brand',\n        accessor: 'brand',\n        width: 100\n      }, {\n        Header: 'Name',\n        accessor: 'name',\n        style: {\n          'whiteSpace': 'unset'\n        },\n        width: 175\n      }, {\n        Header: 'Category',\n        accessor: 'category',\n        width: 100,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"all\") {\n            return true;\n          }\n\n          if (filter.value === \"cleanser\") {\n            return row[filter.id] === \"Cleanser\";\n          }\n\n          if (filter.value === \"eye care\") {\n            return row[filter.id] === \"Eye Care\";\n          }\n\n          if (filter.value === \"lip care\") {\n            return row[filter.id] === \"Lip Care\";\n          }\n\n          if (filter.value === \"mask\") {\n            return row[filter.id] === \"Mask\";\n          }\n\n          if (filter.value === \"moisturizer\") {\n            return row[filter.id] === \"Moisturizer\";\n          }\n\n          if (filter.value === \"mist\") {\n            return row[filter.id] === \"Mist\";\n          }\n\n          if (filter.value === \"sunscreen\") {\n            return row[filter.id] === \"Sunscreen\";\n          }\n\n          if (filter.value === \"toner\") {\n            return row[filter.id] === \"Toner\";\n          }\n\n          if (filter.value === \"treatment\") {\n            return row[filter.id] === \"Treatment\";\n          }\n\n          return row[filter.id] === \"Misc\";\n        },\n        Filter: ({\n          filter,\n          onChange\n        }) => React.createElement(\"select\", {\n          onChange: event => onChange(event.target.value),\n          style: {\n            width: \"100%\"\n          },\n          value: filter ? filter.value : \"all\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"all\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, \"All\"), React.createElement(\"option\", {\n          value: \"cleanser\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Cleansers\"), React.createElement(\"option\", {\n          value: \"eye care\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Eye Care\"), React.createElement(\"option\", {\n          value: \"lip care\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Lip Care\"), React.createElement(\"option\", {\n          value: \"mask\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Masks\"), React.createElement(\"option\", {\n          value: \"moisturizer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Moisturizers\"), React.createElement(\"option\", {\n          value: \"mist\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Mists\"), React.createElement(\"option\", {\n          value: \"sunscreen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Sunscreens\"), React.createElement(\"option\", {\n          value: \"toner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Toners\"), React.createElement(\"option\", {\n          value: \"treatment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Treatments\"), React.createElement(\"option\", {\n          value: \"misc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Other\"))\n      }, {\n        Header: 'Sunscreen',\n        columns: [{\n          Header: 'SPF',\n          accessor: 'spf',\n          width: 45\n        }, {\n          Header: 'PA',\n          accessor: 'pa',\n          style: {\n            'whiteSpace': 'unset'\n          },\n          width: 45\n        }]\n      }, {\n        Header: 'Add Product',\n        accessor: 'add'\n      }];\n      this.setState({\n        shouldReRender: true\n      }, () => console.log(this.state));\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"YO YO YO\") // <div>\n      //   <ReactTable\n      //       data={productData}\n      //       columns={columns}\n      //       defaultPageSize={50}\n      //       noDataText=\"No products match your search.\"\n      //       style={{\n      //           height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n      //       }}\n      //       className=\"-striped -highlight\"\n      //       filterable={true}\n      //       defaultFilterMethod={this.filterCaseInsensitive}\n      //       defaultSorted={[\n      //           {\n      //           id: \"current\",\n      //           desc: true\n      //           }\n      //       ]}\n      //     />\n      //     <center><p><i>Tip: Hold shift when sorting to sort by multiple columns!</i></p></center>\n      //   </div>\n      ;\n    };\n\n    this.filterCaseInsensitive = (filter, row) => {\n      const id = filter.pivotId || filter.id;\n      const content = row[id];\n\n      if (typeof content !== 'undefined') {\n        // filter by text in the table or if it's a object, filter by key\n        if (typeof content === 'object' && content !== null && content.props.children) {\n          // console.log(content)\n          return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n        } else {\n          // console.log(\"content\", content)\n          return String(content).toLowerCase().includes(filter.value.toLowerCase());\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(PageTitle, {\n      location: \"addtoshelf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      control: Input,\n      label: \"Search by Brand or Product\",\n      name: \"userInput\",\n      placeholder: \"\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Search\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/components/AddToShelf.js"],"names":["React","Component","Link","Button","Form","Input","PageTitle","ReactTable","AddToShelf","state","shouldReRender","handleChange","e","d","setState","name","value","handleSubmit","fetch","userInput","then","res","json","data","formatData","props","usersProductReviews","products","productData","usersProductIds","product_reviews","map","review","push","product","id","includes","brand","category","img_url","sunscreen_type","spf","pa","console","log","columns","Header","accessor","width","style","filterMethod","filter","row","Filter","onChange","event","target","filterCaseInsensitive","pivotId","content","children","String","toLowerCase","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport PageTitle from './PageTitle';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default class AddToShelf extends Component {\n  state = {\n    shouldReRender: false\n  }\n  \n  handleChange = (e, d) => {\n    this.setState({ [d.name]: d.value })\n  }\n\n  handleSubmit = () => {\n    fetch(`http://localhost:3000/productsearch?search=${this.state.userInput}`)\n      .then(res => res.json())\n      .then(data => {\n        this.formatData(data, this.props.usersProductReviews)\n      })        \n  }\n  \n  formatData = (products, usersProductReviews) => {\n    // console.log(\"products\", products)\n    // console.log(\"usersProductReviews\", usersProductReviews)\n    let productData = []\n    let usersProductIds = []\n      if (products && usersProductReviews) {\n        // Get IDs off of the User's reviewed products\n        usersProductReviews.product_reviews.map ((review) => {\n          return usersProductIds.push(review.product.id)\n        })\n        // eslint-disable-next-line\n        products.map ((product) => {\n          if (usersProductIds.includes(product.id)) {\n            // This line can be removed if there's a reasonable \".excludes()\" method.\n          } else {\n            productData = [...productData,\n              {\n                \"id\": product.id,\n                \"brand\": product.brand,\n                \"name\": <Link to={`/products/${product.id}`}>{product.name}</Link>,\n                \"category\": product.category,\n                \"img_url\": <img src={product.img_url} height=\"100\" alt={product.id}/>,\n                \"sunscreen_type\": product.sunscreen_type,\n                \"spf\": product.spf,\n                \"pa\": product.pa,\n                \"add\": <Button\n                  as={ Link } to={`/addtoshelf/${product.id}`}\n                  className=\"ui button\"\n                >\n                  Add to Shelf\n                </Button>\n              }\n            ]\n          }\n        })\n      } else {\n          console.log(\"Data not being received (ProductTable.js)\")\n      }\n      const columns = [{\n        Header: 'Image',\n        accessor: 'img_url',\n        width: 115\n      }, {\n        Header: 'Brand',\n        accessor: 'brand',\n        width: 100\n      }, {\n        Header: 'Name',\n        accessor: 'name',\n        style: { 'whiteSpace': 'unset' },\n        width: 175\n      }, {\n        Header: 'Category',\n        accessor: 'category',\n        width: 100,\n        filterMethod: (filter, row) => {\n          if (filter.value === \"all\") {\n            return true;\n          }\n          if (filter.value === \"cleanser\") {\n            return row[filter.id] === \"Cleanser\";\n          }\n          if (filter.value === \"eye care\") {\n            return row[filter.id] === \"Eye Care\";\n          }\n          if (filter.value === \"lip care\") {\n            return row[filter.id] === \"Lip Care\";\n          }\n          if (filter.value === \"mask\") {\n            return row[filter.id] === \"Mask\";\n          }\n          if (filter.value === \"moisturizer\") {\n            return row[filter.id] === \"Moisturizer\";\n          }\n          if (filter.value === \"mist\") {\n            return row[filter.id] === \"Mist\";\n          }\n          if (filter.value === \"sunscreen\") {\n            return row[filter.id] === \"Sunscreen\";\n          }\n          if (filter.value === \"toner\") {\n            return row[filter.id] === \"Toner\";\n          }\n          if (filter.value === \"treatment\") {\n            return row[filter.id] === \"Treatment\";\n          }\n          return row[filter.id] === \"Misc\";\n        },\n        Filter: ({ filter, onChange }) =>\n          <select\n            onChange={event => onChange(event.target.value)}\n            style={{ width: \"100%\" }}\n            value={filter ? filter.value : \"all\"}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"cleanser\">Cleansers</option>\n            <option value=\"eye care\">Eye Care</option>\n            <option value=\"lip care\">Lip Care</option>\n            <option value=\"mask\">Masks</option>\n            <option value=\"moisturizer\">Moisturizers</option>\n            <option value=\"mist\">Mists</option>\n            <option value=\"sunscreen\">Sunscreens</option>\n            <option value=\"toner\">Toners</option>\n            <option value=\"treatment\">Treatments</option>\n            <option value=\"misc\">Other</option>\n          </select>\n      }, {\n        Header: 'Sunscreen',\n        columns: [{\n            Header: 'SPF',\n            accessor: 'spf',\n            width: 45,\n        }, {\n            Header: 'PA',\n            accessor: 'pa',\n            style: { 'whiteSpace': 'unset' },\n            width: 45,\n        }]\n      }, {\n        Header: 'Add Product',\n        accessor: 'add',\n      }\n    ]\n\n    this.setState({\n      shouldReRender: true\n    }, () => console.log(this.state))\n    \n\n    return (\n      <h2>YO YO YO</h2>\n        // <div>\n        //   <ReactTable\n        //       data={productData}\n        //       columns={columns}\n        //       defaultPageSize={50}\n        //       noDataText=\"No products match your search.\"\n        //       style={{\n        //           height: \"600px\" // This will force the table body to overflow and scroll, since there is not enough room\n        //       }}\n        //       className=\"-striped -highlight\"\n        //       filterable={true}\n        //       defaultFilterMethod={this.filterCaseInsensitive}\n        //       defaultSorted={[\n        //           {\n        //           id: \"current\",\n        //           desc: true\n        //           }\n        //       ]}\n        //     />\n        //     <center><p><i>Tip: Hold shift when sorting to sort by multiple columns!</i></p></center>\n        //   </div>\n      )\n      \n    }\n    \n      filterCaseInsensitive = (filter, row) => {\n        const id = filter.pivotId || filter.id;\n        const content = row[id];\n        if (typeof content !== 'undefined') {  \n          // filter by text in the table or if it's a object, filter by key\n            if (typeof content === 'object' && content !== null && content.props.children) {\n              // console.log(content)\n              return String(content.props.children).toLowerCase().includes(filter.value.toLowerCase());\n            } else {\n              // console.log(\"content\", content)\n              return String(content).toLowerCase().includes(filter.value.toLowerCase());\n            }\n        }\n      }\n\n  render() {\n    return (\n      <div>\n        <PageTitle location=\"addtoshelf\" />\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field\n            control={Input}\n            label=\"Search by Brand or Product\"\n            name=\"userInput\"\n            placeholder=\"\"\n            onChange={this.handleChange}\n          />\n          <Form.Button>Search</Form.Button>\n        </Form>\n      </div>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}