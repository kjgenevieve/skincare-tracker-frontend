{"ast":null,"code":"var _jsxFileName = \"/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/containers/Main.js\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from '../components/Home';\nimport ProductTable from \"../components/ProductTable\";\nimport ProductProfile from \"../components/ProductProfile\";\nimport AddToShelf from \"../components/AddToShelf\";\nimport AddEditProduct from \"../components/AddEditProduct\";\nimport IngredientsTable from \"../components/IngredientsTable\";\nimport IngredientProfile from \"./IngredientProfile\";\nexport default class Main extends Component {\n  constructor() {\n    super();\n\n    this.renderProductTable = () => {\n      if (this.state.usersProductReviews.length === 0) {\n        const user_id = 1;\n        let url = \"http://localhost:3000/user_products/users/\".concat(user_id);\n        fetch(url).then(res => res.json()).then(data => {\n          this.setState({\n            usersProductReviews: data\n          });\n        }).then(() => {\n          return React.createElement(ProductTable, {\n            usersProductReviews: this.state.usersProductReviews,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        });\n      } else {\n        return React.createElement(ProductTable, {\n          usersProductReviews: this.state.usersProductReviews,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderAddToShelf = () => {\n      console.log(\"1\");\n\n      if (this.state.usersProductReviews) {\n        console.log(\"2\"); // if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length === 0) {\n\n        if (this.state.usersProductReviews.length === 0) {\n          console.log(\"3\"); // I don't have state set.\n          // Get usersProductReviews, set to state, render <AddToShelf /> with props.\n\n          const user_id = 1;\n          const urls = [// \"http://localhost:3000/productsearch?recent=true\",\n          \"http://localhost:3000/user_products/users/\".concat(user_id)];\n          Promise.all(urls.map(url => fetch(url).then(resp => resp.json()).catch(error => console.log(\"There was a problem!\", error)))).then(data => {\n            this.setState({\n              // allProducts: data[0],\n              // usersProductReviews: data[1]\n              usersProductReviews: data\n            }, () => console.log(\"4\"));\n          }).then(() => {\n            return (// <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n              React.createElement(AddToShelf, {\n                usersProductReviews: this.state.usersProductReviews,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75\n                },\n                __self: this\n              })\n            );\n          }); // } else if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length !== 0) {\n          //   console.log(\"5\")\n          //   // I already have state.allProducts. (This is an edge case that should not occur.) It's possible that this part of the program is broken, because I have no way to test it.\n          //   // Get usersProductReviews, set to state, render <AddToShelf /> with props.\n          //   console.log(\"Error: Main.js, renderAddToShelf(), 'else if' statement.\")\n          //   const user_id = 1;\n          //   fetch(`http://localhost:3000/user_products/users/${user_id}`)\n          //   .then(res => res.json())\n          //   .then(data => {\n          //     this.setState({\n          //       usersProductReviews: data\n          //     }, () => console.log(\"6\"))\n          //   })\n          //   .then(() =>\n          //     {return (\n          //       <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n          //     )})\n          // } else if (this.state.usersProductReviews.length !== 0 && this.state.allProducts.length === 0) {\n          //   // I already have state.usersProductReviews.\n          //   // Get allProducts, set to state, render <AddToShelf /> with props.\n          //   fetch(`http://localhost:3000/products`)\n          //   .then(res => res.json())\n          //   .then(data => {\n          //     this.setState({\n          //       allProducts: data\n          //     })\n          //   })\n          //   .then(() =>\n          //     {return (\n          //       <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n          //     )})\n        } else {\n          // I have access to both state.usersProductReviews && state.allProducts.\n          // Render <AddToShelf /> with props.\n          return (// <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n            React.createElement(AddToShelf, {\n              usersProductReviews: this.state.usersProductReviews,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            })\n          );\n        }\n      }\n    };\n\n    this.renderIngredients = () => {\n      let rawIngredients = [];\n      let usersIngredientsIds = [];\n      let usersIngredients = [];\n\n      if (this.state.usersIngredients.length === 0) {\n        const user_id = 1;\n        fetch(\"http://localhost:3000/users/\".concat(user_id)).then(res => res.json()).then(data => {\n          rawIngredients = data.user_ingredients.flat();\n        }).then(() => {\n          rawIngredients.map(ingredient => {\n            if (usersIngredientsIds.includes(ingredient.id)) {} else {\n              usersIngredientsIds.push(ingredient.id);\n              usersIngredients.push(ingredient);\n            }\n          });\n        }).then(() => {\n          this.setState({\n            usersIngredients: usersIngredients\n          });\n        }).then(() => {\n          return React.createElement(IngredientsTable, {\n            ingredients: this.state.usersIngredients,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          });\n        });\n      } else {\n        return React.createElement(IngredientsTable, {\n          ingredients: this.state.usersIngredients,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      // allProducts: [],\n      usersProductReviews: [],\n      usersIngredients: [],\n      currentIngredient: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products\",\n      render: this.renderProductTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/products/:id\",\n      render: props => React.createElement(ProductProfile, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/addtoshelf\",\n      render: this.renderAddToShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/addtoshelf/:product_id\",\n      render: props => React.createElement(AddEditProduct, Object.assign({}, props, {\n        products: this.state.allProducts,\n        usersProducts: this.state.usersProducts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/ingredients\",\n      render: this.renderIngredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/ingredients/:id\",\n      render: () => React.createElement(IngredientProfile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/genevieve/Development/mod_5/skincare-tracker-frontend/src/containers/Main.js"],"names":["React","Component","Route","Home","ProductTable","ProductProfile","AddToShelf","AddEditProduct","IngredientsTable","IngredientProfile","Main","constructor","renderProductTable","state","usersProductReviews","length","user_id","url","fetch","then","res","json","data","setState","renderAddToShelf","console","log","urls","Promise","all","map","resp","catch","error","renderIngredients","rawIngredients","usersIngredientsIds","usersIngredients","user_ingredients","flat","ingredient","includes","id","push","currentIngredient","render","props","allProducts","usersProducts"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from '../components/Home';\nimport ProductTable from \"../components/ProductTable\";\nimport ProductProfile from \"../components/ProductProfile\";\nimport AddToShelf from \"../components/AddToShelf\";\nimport AddEditProduct from \"../components/AddEditProduct\";\nimport IngredientsTable from \"../components/IngredientsTable\";\nimport IngredientProfile from \"./IngredientProfile\";\n\nexport default class Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // allProducts: [],\n      usersProductReviews: [],\n      usersIngredients: [],\n      currentIngredient: {}\n    };\n  }\n\n  renderProductTable = () => {\n    if (this.state.usersProductReviews.length === 0) {\n      const user_id = 1\n      let url = `http://localhost:3000/user_products/users/${user_id}`\n      \n      fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          usersProductReviews: data\n        })\n      })\n      .then(() =>\n        {return (\n          <ProductTable usersProductReviews={this.state.usersProductReviews} />\n        )})\n    } else {\n      return (\n        <ProductTable usersProductReviews={this.state.usersProductReviews} />\n      )\n    }\n  }\n\n  renderAddToShelf = () => {\n    console.log(\"1\")\n    if (this.state.usersProductReviews) {\n      console.log(\"2\")\n      // if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length === 0) {\n      if (this.state.usersProductReviews.length === 0) {\n        console.log(\"3\")\n        // I don't have state set.\n        // Get usersProductReviews, set to state, render <AddToShelf /> with props.\n        const user_id = 1;\n        const urls = [\n          // \"http://localhost:3000/productsearch?recent=true\",\n          `http://localhost:3000/user_products/users/${user_id}`\n        ];\n\n        Promise.all(\n          urls.map(url =>\n            fetch(url)\n              .then(resp => resp.json())\n              .catch(error => console.log(\"There was a problem!\", error))\n          )\n        ).then(data => {\n          this.setState({\n            // allProducts: data[0],\n            // usersProductReviews: data[1]\n            usersProductReviews: data\n          }, () => console.log(\"4\"))\n        }).then(() => {\n          return (\n            // <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n            <AddToShelf usersProductReviews={this.state.usersProductReviews} />\n          )\n        })\n      // } else if (this.state.usersProductReviews.length === 0 && this.state.allProducts.length !== 0) {\n      //   console.log(\"5\")\n      //   // I already have state.allProducts. (This is an edge case that should not occur.) It's possible that this part of the program is broken, because I have no way to test it.\n      //   // Get usersProductReviews, set to state, render <AddToShelf /> with props.\n      //   console.log(\"Error: Main.js, renderAddToShelf(), 'else if' statement.\")\n      //   const user_id = 1;\n\n      //   fetch(`http://localhost:3000/user_products/users/${user_id}`)\n      //   .then(res => res.json())\n      //   .then(data => {\n      //     this.setState({\n      //       usersProductReviews: data\n      //     }, () => console.log(\"6\"))\n      //   })\n      //   .then(() =>\n      //     {return (\n      //       <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n      //     )})\n      // } else if (this.state.usersProductReviews.length !== 0 && this.state.allProducts.length === 0) {\n      //   // I already have state.usersProductReviews.\n      //   // Get allProducts, set to state, render <AddToShelf /> with props.\n      //   fetch(`http://localhost:3000/products`)\n      //   .then(res => res.json())\n      //   .then(data => {\n      //     this.setState({\n      //       allProducts: data\n      //     })\n      //   })\n      //   .then(() =>\n      //     {return (\n      //       <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n      //     )})\n      } else {\n        // I have access to both state.usersProductReviews && state.allProducts.\n        // Render <AddToShelf /> with props.\n        return (\n          // <AddToShelf products={this.state.allProducts} usersProductReviews={this.state.usersProductReviews} />\n          <AddToShelf usersProductReviews={this.state.usersProductReviews} />\n        )\n      }\n    }\n  }\n\n  renderIngredients = () => {\n    let rawIngredients = []\n    let usersIngredientsIds = []\n    let usersIngredients = []\n    if (this.state.usersIngredients.length === 0) {\n      const user_id = 1\n      fetch(`http://localhost:3000/users/${user_id}`)\n      .then(res => res.json())\n      .then((data) => {\n        rawIngredients = data.user_ingredients.flat()\n      })\n      .then(() => {\n        rawIngredients.map ((ingredient) => {\n          if (usersIngredientsIds.includes(ingredient.id)) {\n\n          } else {\n            usersIngredientsIds.push(ingredient.id);\n            usersIngredients.push(ingredient)\n          }\n        })\n      })\n      .then(() => {\n        this.setState({\n          usersIngredients: usersIngredients\n        })\n      })\n      .then(() => {\n        return (\n          <IngredientsTable ingredients={this.state.usersIngredients} />\n        )\n      })\n    } else {\n      return (\n          <IngredientsTable ingredients={this.state.usersIngredients} />\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Home />\n          )}\n        />\n        <Route\n          exact\n          path=\"/products\"\n          render={this.renderProductTable}\n        />\n        <Route\n          exact\n          path=\"/products/:id\"\n          render={(props) => (\n            <ProductProfile {...props} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/addtoshelf\"\n          render={this.renderAddToShelf}\n        />\n        <Route\n          exact\n          path=\"/addtoshelf/:product_id\"\n          render={props => (\n            <AddEditProduct {...props} products={this.state.allProducts} usersProducts={this.state.usersProducts}/>\n          )}\n        />\n        <Route\n          exact\n          path=\"/ingredients\"\n          render={this.renderIngredients}\n        />\n        <Route\n          path=\"/ingredients/:id\"\n          render={() => (\n            <IngredientProfile />\n          )}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}